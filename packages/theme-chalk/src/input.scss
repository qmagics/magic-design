@use "sass:map";
@import "./common/var.scss";
@import "./mixins/mixin.scss";

$cname: $namespace+'-'+"input";
$border-radius: 3px;
$border-width: 1px;
$padding-h: 14px;
$gutter:12px;

$sizes: ("mini": ("height": 26px,
        "font-size":12px,
        "padding-h": $padding-h,
    ),
    "small": ("height": 30px,
        "font-size":12px,
        "padding-h": $padding-h,
    ),
    "medium": ("height": 34px,
        "font-size":14px,
        "padding-h": $padding-h,
    ),
    "large": ("height": 40px,
        "font-size":14px,
        "padding-h": $padding-h,
    ),
);

@include b(input) {
    position: relative;
    display: inline-flex;
    box-sizing: border-box;
    font-weight: 400;
    -webkit-appearance: none;
    width: 100%;
    padding: 0 $gutter;
    background-color: $color-fill-1;
    color: $color-text-1;
    transition:
        color .1s cubic-bezier(0, 0, 1, 1),
        border-color .1s cubic-bezier(0, 0, 1, 1),
        background-color .1s cubic-bezier(0, 0, 1, 1);

    &:hover {
        .#{$cname+$element-separator+'clear-btn'} {
            opacity: 1;
        }
    }

    @each $size,
    $item in $sizes {
        @include m('size-'+$size) {
            height: map.get($item, "height");
            line-height: map.get($item, "height");
            font-size: map.get($item, "font-size");
        }
    }

    @include e(inner) {
        border: none;
        outline: none;
        padding: 0;
        border-radius: $border-radius;
        width: 100%;
        color: inherit;
        background-color: transparent;
    }

    @include e(prefix) {
        padding-right: $gutter;
        display: inline-flex;
    }

    @include e(suffix) {
        padding-left: $gutter;
        display: inline-flex;
    }

    @include e(clear-btn) {
        position: relative;
        cursor: pointer;
        display: inline-flex;
        opacity: 0;
        font-size: 12px;

        &::after {
            content: "";
            width: 18px;
            height: 18px;
            border-radius: 50%;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate3d(-50%, -50%, 0);
            transition: background-color .2s ease;
        }

        &:hover {
            &:after {
                background-color: rgba(0, 0, 0, .05);
            }
        }
    }

    @include e(prepend) {
        background-color: $color-fill-1;
        padding: 0 $gutter;
        border-right: 1px solid $color-fill-3;
    }

    @include e(append) {
        background-color: $color-fill-1;
        padding: 0 $gutter;
        border-left: 1px solid $color-fill-3;
    }

    @include when(focused) {
        background-color: $color-fill-3;
    }

    @include when(has-prepend) {
        padding-left: 0;

        .#{$cname+$element-separator+'inner'} {
            padding-left: $gutter;
        }
    }

    @include when(has-append) {
        padding-right: 0;

        .#{$cname+$element-separator+'inner'} {
            padding-right: $gutter;
        }
    }

    @include when(disabled) {
        .#{$cname+$element-separator+'inner'} {
            cursor: not-allowed;
        }
    }
}